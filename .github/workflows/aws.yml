name: Build and Push to AWS ECR

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: nhamaew/pet-store
  AWS_ACCOUNT_ID: 149536482720

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production  # ต้องระบุ environment ถ้า secrets อยู่ใน environment

    steps:
    - name: Check Environment Variables and Secrets
      run: |
        echo "=== Environment Variables ==="
        echo "AWS_REGION: ${{ env.AWS_REGION }}"
        echo "ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}"
        
        echo "=== Repository Secrets Check ==="
        echo "AWS_ACCESS_KEY_ID (repo): ${{ secrets.AWS_ACCESS_KEY_ID && 'SET' || 'NOT SET' }}"
        echo "AWS_SECRET_ACCESS_KEY (repo): ${{ secrets.AWS_SECRET_ACCESS_KEY && 'SET' || 'NOT SET' }}"
        
        echo "=== Environment Info ==="
        echo "Current environment: ${{ github.environment }}"
        echo "Job environment: production"
        
        echo "=== All Environment Variables ==="
        printenv | grep -E "AWS_|GITHUB_" | sort

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
        mask-aws-account-id: 'no'

    - name: Test AWS credentials
      run: |
        # เช็คว่า credentials ถูกตั้งค่าหรือไม่ (โดยไม่แสดงค่าจริง)
        if [ -z "$AWS_ACCESS_KEY_ID" ]; then
          echo "❌ AWS_ACCESS_KEY_ID is empty or not set"
        else
          echo "✅ AWS_ACCESS_KEY_ID is set (length: ${#AWS_ACCESS_KEY_ID} characters)"
          echo "   First 4 chars: ${AWS_ACCESS_KEY_ID:0:4}****"
        fi
        
        if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
          echo "❌ AWS_SECRET_ACCESS_KEY is empty or not set"
        else
          echo "✅ AWS_SECRET_ACCESS_KEY is set (length: ${#AWS_SECRET_ACCESS_KEY} characters)"
        fi
        
        echo "AWS Region: ap-southeast-1"
        echo "ECR Repository: nhamaew/pet-store"
        
        # ทดสอบ AWS CLI
        aws sts get-caller-identity
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        
        # Push images to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Output image URI
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Deploy to AWS App Runner
      run: |
        # Get current service configuration
        SERVICE_ARN="arn:aws:apprunner:${{ env.AWS_REGION }}:${{ env.AWS_ACCOUNT_ID }}:service/your-service-name"
        
        # Start a new deployment
        aws apprunner start-deployment \
          --service-arn $SERVICE_ARN \
          --region ${{ env.AWS_REGION }}
        
        echo "✅ App Runner deployment initiated!"
        echo "🚀 Service ARN: $SERVICE_ARN"
        echo "📦 Image: $ECR_REGISTRY/$ECR_REPOSITORY:latest"

    - name: Image digest
      run: echo "Image pushed successfully to ECR and App Runner deployment started"